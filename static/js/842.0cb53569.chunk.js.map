{"version":3,"file":"static/js/842.0cb53569.chunk.js","mappings":"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","sources":["components/Education/Education.jsx","components/Education/educationList.js","components/Home/Home.jsx","components/Summary/Summary.jsx","../node_modules/nanoid/index.browser.js","components/WorkExperience/WorkExperience.jsx","components/WorkExperience/workExperienceList.js"],"sourcesContent":["import { Boxes } from 'Theme/Boxes';\n\nimport { educationList } from './educationList';\n\nexport const Education = () => {\n  return (\n    <Boxes\n      display={'flex'}\n      flexDirection={'column'}\n      mt={4}\n      maxWidth={600}\n      pb={4}\n    >\n      <h2>Education</h2>\n      {educationList.map(({ title, dateDue, direction }) => {\n        return (\n          <Boxes key={title}>\n            <Boxes as={'h3'} mt={2} key={title}>\n              {title}\n            </Boxes>\n            <Boxes as={'ul'} mt={2}>\n              <Boxes as={'li'} mt={1}>\n                {dateDue}\n              </Boxes>\n              <Boxes as={'li'} mt={1}>\n                {direction}\n              </Boxes>\n            </Boxes>\n          </Boxes>\n        );\n      })}\n    </Boxes>\n  );\n};\n","export const educationList = [\n  {\n    title: 'IT School GoIT (Kyiv)',\n    dateDue: ' July 2022 - up to now',\n    direction: '● Fullstack Developer',\n  },\n  {\n    title: 'Naval Academy of P.S. Nachimov',\n    dateDue: ' Ukraine 2015',\n    direction: '● Specialist of Navigation & Engineering',\n  },\n];\n","import { Boxes } from 'Theme/Boxes';\nimport { Summary } from 'components/Summary/Summary';\nimport { WorkExperience } from 'components/WorkExperience/WorkExperience';\nimport { Education } from 'components/Education/Education';\nimport { screenStatus } from 'redux/Selectors/screenStatus';\nimport { useSelector } from 'react-redux';\n\nconst Home = () => {\n  const { screenResolution } = useSelector(screenStatus);\n\n  return (\n    <>\n      {screenResolution === 'mobile' || screenResolution === 'tablet' ? (\n        <Boxes display={'flex'} flexDirection={'column'} mt={4}>\n          {(screenResolution === 'desktop' ||\n            screenResolution === 'tablet') && (\n            <Boxes>\n              <Boxes as={'h1'}>Volovenko Ruslan</Boxes>\n              <Boxes as={'p'} mt={2}>\n                JUNIOR FRONTEND DEVELOPER\n              </Boxes>\n            </Boxes>\n          )}\n          <Summary />\n          <WorkExperience />\n          <Education />\n        </Boxes>\n      ) : (\n        <Boxes display={'flex'} mt={4} ml={5} flexDirection={'column'}>\n          {(screenResolution === 'desktop' ||\n            screenResolution === 'tablet') && (\n            <Boxes>\n              <Boxes as={'h1'}>Volovenko Ruslan</Boxes>\n              <Boxes as={'p'} mt={2}>\n                JUNIOR FRONTEND DEVELOPER\n              </Boxes>\n            </Boxes>\n          )}\n          <Summary />\n          <WorkExperience />\n          <Education />\n        </Boxes>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import { Boxes } from 'Theme/Boxes';\nimport colors from 'Theme/colors';\nimport { useSelector } from 'react-redux';\nimport { darkThemeSelector } from 'redux/Selectors/darkThemeSelector';\n\nexport const Summary = () => {\n  const { darkMode } = useSelector(darkThemeSelector);\n\n  return !darkMode ? (\n    <Boxes\n      display={'flex'}\n      flexDirection={'column'}\n      mt={4}\n      maxWidth={600}\n      borderBottom={`2px solid ${colors.body}`}\n      pb={4}\n    >\n      <h2>Summary</h2>\n      <Boxes as={'p'} mt={2}>\n        Some words about me. I am young Front-End developer, day by day I am\n        growing up in knowledges of HTML, CSS, JavaScript, React. Looking for a\n        full time position in a company. I have certain expirience following\n        Team-Lead methodology due to work in team. I am a fast learner,\n        responsible, and ready for learning every day.\n      </Boxes>\n    </Boxes>\n  ) : (\n    <Boxes\n      display={'flex'}\n      flexDirection={'column'}\n      mt={4}\n      maxWidth={600}\n      borderBottom={`2px solid ${colors.eliphant}`}\n      pb={4}\n    >\n      <h2>Summary</h2>\n      <Boxes as={'p'} mt={2}>\n        Some words about me. I am young Front-End developer, day by day I am\n        growing up in knowledges of HTML, CSS, JavaScript, React. Looking for a\n        full time position in a company. I have certain expirience following\n        Team-Lead methodology due to work in team. I am a fast learner,\n        responsible, and ready for learning every day.\n      </Boxes>\n    </Boxes>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { Boxes } from 'Theme/Boxes';\nimport { WorkExperienceList } from './workExperienceList';\nimport colors from 'Theme/colors';\nimport { useSelector } from 'react-redux';\nimport { darkThemeSelector } from 'redux/Selectors/darkThemeSelector';\nimport { nanoid } from 'nanoid';\n\nexport const WorkExperience = () => {\n  const { darkMode } = useSelector(darkThemeSelector);\n\n  return !darkMode ? (\n    <Boxes\n      display={'flex'}\n      flexDirection={'column'}\n      mt={4}\n      maxWidth={600}\n      borderBottom={`2px solid ${colors.body}`}\n      pb={4}\n    >\n      <h2>Work Experience</h2>\n      {WorkExperienceList.map(({ title, dateDue, lists }) => {\n        return (\n          <Boxes key={title}>\n            <Boxes as={'h3'} mt={2}>\n              {title}\n            </Boxes>\n            <Boxes as={'p'} mt={2}>\n              {dateDue}\n            </Boxes>\n            <Boxes as={'ul'} mt={2}>\n              {lists.map(list => {\n                return (\n                  <Boxes as={'li'} mt={1} key={nanoid()}>\n                    {list}\n                  </Boxes>\n                );\n              })}\n            </Boxes>\n          </Boxes>\n        );\n      })}\n\n      <Boxes as={'ul'} mt={2}></Boxes>\n    </Boxes>\n  ) : (\n    <Boxes\n      display={'flex'}\n      flexDirection={'column'}\n      mt={4}\n      maxWidth={600}\n      borderBottom={`2px solid ${colors.eliphant}`}\n      pb={4}\n    >\n      <h2>Work Experience</h2>\n      {WorkExperienceList.map(({ title, dateDue, lists }) => {\n        return (\n          <Boxes key={title}>\n            <Boxes as={'h3'} mt={2}>\n              {title}\n            </Boxes>\n            <Boxes as={'p'} mt={2}>\n              {dateDue}\n            </Boxes>\n            <Boxes as={'ul'} mt={2}>\n              {lists.map(list => {\n                return (\n                  <Boxes as={'li'} mt={1} key={nanoid()}>\n                    {list}\n                  </Boxes>\n                );\n              })}\n            </Boxes>\n          </Boxes>\n        );\n      })}\n\n      <Boxes as={'ul'} mt={2}></Boxes>\n    </Boxes>\n  );\n};\n","export const WorkExperienceList = [\n  {\n    title: 'Sea Navigator World-Wide',\n    dateDue: 'June 2012 - May 2022',\n    lists: [\n      '● Navigation vessel in World Wide trading area',\n      '● Communication with foreign countries.',\n      '● Preparation pre-arrival documents.',\n      '● Active messaging with agencies.',\n      '● Safety officer.',\n      '● Working in offshore wind-energy projects.',\n      '● Cyber Security Officer.',\n    ],\n  },\n];\n"],"names":["Education","display","flexDirection","mt","maxWidth","pb","educationList","title","dateDue","direction","as","screenResolution","useSelector","screenStatus","Summary","WorkExperience","ml","darkThemeSelector","darkMode","borderBottom","colors","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Boxes","WorkExperienceList","lists","map","list"],"sourceRoot":""}